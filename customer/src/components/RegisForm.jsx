import { useState } from "react";

function RegisForm() {
    const [errors, setErrors] = useState({});

    const handleSubmit = async (event) => {
        event.preventDefault(); 

        const form = event.target;
        const formData = new FormData(form);

        const userData = {
            fullname: formData.get("fullname").trim(),
            email: formData.get("email").trim(),
            phone: formData.get("phoneNum").trim(),
            gender: formData.get("gender") || "",
            dob: formData.get("dob"),
            password: formData.get("password"),
            confirmPassword: formData.get("confirmPassword"),
            terms: formData.get("terms") === "on",
        };

        console.log("üìù JSON xu·∫•t ra:", JSON.stringify(userData, null, 2));

        let newErrors = {};

        
        if (!userData.fullname) newErrors.fullname = "H·ªç v√† t√™n kh√¥ng ƒë∆∞·ª£c ƒë·ªÉ tr·ªëng.";
        
        let emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
        if (!emailRegex.test(userData.email)) newErrors.email = "Email kh√¥ng h·ª£p l·ªá.";
        
        let phoneRegex = /^[0-9]{9,11}$/;
        if (!phoneRegex.test(userData.phone)) newErrors.phone = "S·ªë ƒëi·ªán tho·∫°i kh√¥ng h·ª£p l·ªá (9-11 ch·ªØ s·ªë).";
        
        if (!userData.gender) newErrors.gender = "Vui l√≤ng ch·ªçn gi·ªõi t√≠nh.";
        
        if (!userData.dob) newErrors.dob = "Vui l√≤ng ch·ªçn ng√†y sinh.";
        
        if (userData.password.length < 8) newErrors.password = "M·∫≠t kh·∫©u ph·∫£i c√≥ √≠t nh·∫•t 8 k√Ω t·ª±.";
        
        if (userData.password !== userData.confirmPassword) 
            newErrors.confirmPassword = "M·∫≠t kh·∫©u nh·∫≠p l·∫°i kh√¥ng kh·ªõp.";
        
        if (!userData.terms) newErrors.terms = "B·∫°n ph·∫£i ƒë·ªìng √Ω v·ªõi ƒëi·ªÅu kho·∫£n d·ªãch v·ª•.";

        setErrors(newErrors);

        if (Object.keys(newErrors).length > 0) return; 

        try {
            const response = await fetch("/abc", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify(userData),
            });

            if (!response.ok) {
                throw new Error("C√≥ l·ªói x·∫£y ra khi g·ª≠i d·ªØ li·ªáu.");
            }

            alert("ƒêƒÉng k√Ω th√†nh c√¥ng!");
            form.reset(); 
        } catch (error) {
            console.error("L·ªói:", error);
            alert("ƒêƒÉng k√Ω th·∫•t b·∫°i, vui l√≤ng th·ª≠ l·∫°i.");
        }
    };

    return (
        <div className="flex-grow flex items-center justify-center my-[20px]">
            <div className="bg-white shadow-lg rounded-lg p-8 w-[450px] border border-gray-200">
                <h2 className="text-green-700 text-3xl font-bold text-center mb-6">ƒêƒÇNG K√ù</h2>
                <form id="registerForm" onSubmit={handleSubmit}>
                    <label className="block mb-1">H·ªç v√† t√™n:</label>
                    <input name="fullname" type="text" className="w-full border rounded p-2 mb-3 bg-gray-100" />
                    <span className="error text-red-500">{errors.fullname}</span>

                    <label className="block mb-1">Email:</label>
                    <input name="email" type="email" className="w-full border rounded p-2 mb-3 bg-gray-100" />
                    <span className="error text-red-500">{errors.email}</span>

                    <label className="block mb-1">S·ªë ƒëi·ªán tho·∫°i:</label>
                    <input name="phoneNum" type="text" className="w-full border rounded p-2 mb-3 bg-gray-100" />
                    <span className="error text-red-500">{errors.phone}</span>

                    <label className="block mb-1">Gi·ªõi t√≠nh:</label>
                    <div className="flex space-x-4 mb-3">
                        <label><input type="radio" name="gender" value="Nam" className="mr-1" /> Nam</label>
                        <label><input type="radio" name="gender" value="N·ªØ" className="mr-1" /> N·ªØ</label>
                        <label><input type="radio" name="gender" value="Kh√°c" className="mr-1" /> Kh√°c</label>
                    </div>
                    <span className="error text-red-500">{errors.gender}</span>

                    <label className="block mb-1">Ng√†y sinh:</label>
                    <input name="dob" type="date" className="w-full border rounded p-2 mb-3 bg-gray-100" />
                    <span className="error text-red-500">{errors.dob}</span>

                    <label className="block mb-1">M·∫≠t kh·∫©u:</label>
                    <input name="password" type="password" className="w-full border rounded p-2 mb-3 bg-gray-100" />
                    <span className="error text-red-500">{errors.password}</span>

                    <label className="block mb-1">Nh·∫≠p l·∫°i m·∫≠t kh·∫©u:</label>
                    <input name="confirmPassword" type="password" className="w-full border rounded p-2 mb-3 bg-gray-100" />
                    <span className="error text-red-500">{errors.confirmPassword}</span>

                    <div className="flex items-center mb-4">
                        <input name="terms" type="checkbox" className="mr-2" />
                        <span className="text-sm">T√¥i ƒë·ªìng √Ω v·ªõi <a href="#" className="text-blue-600">ƒêi·ªÅu kho·∫£n d·ªãch v·ª•</a>.</span>
                    </div>
                    <span className="error text-red-500">{errors.terms}</span>

                    <button type="submit" className="w-1/2 mx-auto block bg-green-700 text-white py-2 rounded-lg text-lg font-semibold">
                        ƒêƒÇNG K√ù
                    </button>
                </form>
            </div>
        </div>
    );
}

export default RegisForm;
